// LeetCode-2125: https://leetcode.com/problems/number-of-laser-beams-in-a-bank/
// about half the code was auto-generated by Amazon Code-Whisperer

#include <vector>
#include <string>

using namespace std;

class Solution {
private:
    inline int countNumDevices(string& str) {
        int numDevices = 0;
        for (char ch: str) {
            if (ch == '1') {
                numDevices++;
            }
        }

        return numDevices;
    }

    vector<int> buildNumDevicesVec(vector<string>& bank) {
        vector<int> numDevicesVec;
        for (string& str: bank) {
            int numDevices = countNumDevices(str);
            if (numDevices > 0) {
                numDevicesVec.push_back(numDevices);
            }
        }

        return numDevicesVec;
    }

    int calcNumBeams(vector<int>& numDevicesVec) {
        int numBeams = 0;
        for (int i = 0; i < numDevicesVec.size() - 1; i++) {
            numBeams += numDevicesVec[i] * numDevicesVec[i + 1];
        }

        return numBeams;
    }

public:
    int numberOfBeams(vector<string>& bank) {
        if (bank.size() <= 1) {
            return 0;
        }

        vector<int> numDevicesVec = buildNumDevicesVec(bank);
        if (numDevicesVec.size() <= 1) {
            return 0; // no multiple rows of devices
        }

        return calcNumBeams(numDevicesVec);
    }
};
