// LeetCode-1637: https://leetcode.com/problems/widest-vertical-area-between-two-points-containing-no-points/
// pretty much all code of the two private helper functions was auto-generated by Amazon CodeWhisperer (taking hints from the name of functions)

#include <vector>

using namespace std;

class Solution {
private:
    vector<int> getXCoordinates(vector<vector<int>>& points) {
        vector<int> xCoords;

        for (auto point: points) {
            xCoords.push_back(point[0]);
        }

        return xCoords;
    }

    int findMaxWidth(vector<int>& xCoords) {
        sort(xCoords.begin(), xCoords.end());

        int maxWidth = 0;
        for (int i = 1; i < xCoords.size(); i++) {
            maxWidth = max(maxWidth, xCoords[i] - xCoords[i - 1]);
        }

        return maxWidth;
    }

public:
    int maxWidthOfVerticalArea(vector<vector<int>>& points) {
        vector<int> xCoords = getXCoordinates(points);
        return findMaxWidth(xCoords);
    }
};
